# Generated by Django 4.0.3 on 2022-04-02 13:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nickname', models.CharField(max_length=50, unique=True, verbose_name='Pseudo')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de création')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur (custom)',
                'verbose_name_plural': 'Utilisateurs (custom)',
            },
        ),
        migrations.CreateModel(
            name='AnswerChoice',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('answer_choice', models.CharField(blank=True, max_length=150, null=True, verbose_name='Choix de réponses')),
                ('correct_answer', models.BooleanField(null=True)),
            ],
            options={
                'verbose_name': 'Choix de réponse',
                'verbose_name_plural': 'Choix de réponses',
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(blank=True, max_length=50, null=True, verbose_name='Sujet')),
                ('version', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Version')),
            ],
            options={
                'verbose_name': 'Questionnaire',
                'verbose_name_plural': 'Questionnaires',
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Score')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Score',
                'verbose_name_plural': 'Scores',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.CharField(blank=True, max_length=150, null=True, verbose_name='Question')),
                ('id_quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enoki_app.quiz', verbose_name='Questionnaire')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='AnswerUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_answer_choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enoki_app.answerchoice', verbose_name='Choix de réponse')),
                ('id_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enoki_app.question', verbose_name='Question')),
                ('id_quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enoki_app.quiz', verbose_name='Questionnaire')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Réponse des utilisateurs',
                'verbose_name_plural': 'Réponses des utilisateurs',
            },
        ),
        migrations.AddField(
            model_name='answerchoice',
            name='id_question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enoki_app.question', verbose_name='Question'),
        ),
        migrations.AddField(
            model_name='answerchoice',
            name='id_quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enoki_app.quiz', verbose_name='Questionnaire'),
        ),
    ]
